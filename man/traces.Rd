% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/traces.R
\name{traces}
\alias{traces}
\alias{make_dataset}
\alias{new_trace}
\alias{new_bars}
\alias{new_lines}
\alias{new_scatter}
\title{Add a New Trace to a \code{chartjs} Plot}
\usage{
make_dataset(
  data,
  y,
  label = NULL,
  type,
  ...,
  xAxis = NULL,
  yAxis = NULL,
  order = NULL,
  legend = NULL,
  fill = (type != "line"),
  bgCol = NULL,
  brdCol = bgCol,
  brdWidth = NULL,
  radius = NULL,
  hoverRadius = NULL,
  tension = NULL,
  stepped = list(NULL, FALSE, TRUE, "before", "after", "middle")[[1]],
  barPerc = NULL,
  catPerc = NULL
)

new_trace(chart, y, label = guess_label(substitute(y)), yAxis = "y", type, ...)

new_bars(chart, y, label = guess_label(substitute(y)), ...)

new_lines(chart, y, label = guess_label(substitute(y)), ...)

new_scatter(chart, y, label = guess_label(substitute(y)), ...)
}
\arguments{
\item{data}{The raw data object that \code{y} will be evaluated inside of.}

\item{y}{An expression that evaluates to a vector (see \code{x} in \code{eval_data}).}

\item{label}{The label to use for the trace (character scalar).}

\item{type}{The type of trace (character scalar, one of \code{c("bar", "line", "scatter")}).}

\item{...}{Additional named arguments to add to the data.}

\item{xAxis, yAxis}{The name of the x/y-axis to add the trace to (character scalar).}

\item{order}{Controls the order that the traces are drawn in
(0 is the default, lower numbers go on top, higher on bottom) (integer scalar).}

\item{legend}{Whether to show the trace in the legend (boolean scalar).}

\item{fill}{Whether to fill the trace in (see more in the details section).}

\item{bgCol, brdCol/brdWidth}{The color/width of the background/border of the trace (character scalar).}

\item{radius, hoverRadius}{The radius of the points/radius when hovered over (numeric scalar).}

\item{tension}{The tension of the lines between the points (0 for straight lines, 0.4 is default) (numeric scalar).}

\item{stepped}{Whether to draw the lines as stepped, or how to draw them as stepped (boolean/character scalar).}

\item{barPerc}{Fraction of the available width each bar should be
within the category width (numeric scalar in \code{[0, 1]}).}

\item{catPerc}{Fraction of the available width each category should be
within the sample width  (numeric scalar in \code{[0, 1]}).}

\item{chart}{A \code{chartjs} object.}
}
\value{
\code{make_dataset}: a dataset object in the format required for \code{chartjs} objects.

\code{new_trace}: a modified \code{chartjs} object.
}
\description{
- \code{make_dataset} is an internal function used to make a dataset object
  in the format required for \code{chartjs} objects.
- \code{new_trace} is the general function used to add a new trace to a \code{chartjs} object.
- \code{new_bars}/\code{new_lines}/\code{new_scatter} are helper functions
  for \code{new_trace} where \code{type = "bars"/"lines"/"scatter"}, respectively.
}
\details{
To see the various ways that \code{fill} can be used,
  look at the "Area charts" examples on this page:
  \url{https://www.chartjs.org/samples/latest/}.

For more information on \code{barPerc}/\code{catPerc}, see here:
  \url{https://www.chartjs.org/docs/latest/charts/bar.html#barpercentage-vs-categorypercentage}.
}
\examples{
# Individual traces
chartjs(mtcars, x = 1:32) \%>\% new_trace(y = ~ mpg, type = "bar")
chartjs(mtcars, x = 1:32) \%>\% new_bars(y = ~ mpg)
chartjs(mtcars, x = 1:32) \%>\% new_lines(y = ~ mpg)
chartjs(mtcars, x = 1:32) \%>\% new_scatter(y = ~ mpg)

# Add multiple traces to the same chart
chartjs(mtcars, x = 1:32) \%>\% new_bars(y = ~ cyl) \%>\%
  new_lines(y = ~ mpg) \%>\% new_scatter(y = ~ qsec)

}
