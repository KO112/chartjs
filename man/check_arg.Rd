% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/other.R
\name{check_arg}
\alias{check_arg}
\title{Check/Validate Arguments}
\usage{
check_arg(arg, name, val, validVals, silent = FALSE)
}
\arguments{
\item{arg}{The parameter name to validate values for (character scalar).}

\item{name}{The name of the current loop variable (character scalar).}

\item{val}{The value of the current loop variable.}

\item{validVals}{A vector/list of the valid values that the parameter can take.}

\item{silent}{Whether to silence the warning that usually appears when validation fails (boolean scalar).}
}
\value{
If \code{! val \%in\% validVals}, \code{validVals[1]} will be returned, else \code{val}.
}
\description{
Check that the arguments passed for a parameter are in a set of valid values,
  and throw a warning & return a default value if validation fails.
}
\details{
This is an internal function meant to be called unconditionally inside a loop.
It will only perform validation if \code{arg == name}.
}
\examples{
# Valid value, "apple" is returned
check_arg("fruit", "fruit", "apple", c("apple", "banana", "cherry"))

# Invalid value, "banana" is returned
check_arg("fruit", "fruit", "apple", c("banana", "cherry"), silent = TRUE)

# Throws a warning
\dontrun{
  check_arg("fruit", "fruit", "apple", c("banana", "cherry"))
}

}
